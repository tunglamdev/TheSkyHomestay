// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheSkyHomestay.Data.EF;

#nullable disable

namespace TheSkyHomestay.Data.Migrations
{
    [DbContext(typeof(TheSkyHomestayDbContext))]
    [Migration("20221026074105_RemoveColumnStartAtTableRooms")]
    partial class RemoveColumnStartAtTableRooms
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("372ea575-2536-4076-9bab-3e3138de495f"),
                            RoleId = new Guid("9e87b492-5343-4272-9a34-fa5de7cffb22")
                        },
                        new
                        {
                            UserId = new Guid("8a820adb-93d7-4c6f-9404-bdbfc14419f4"),
                            RoleId = new Guid("8f7579ee-4af9-4b71-9ada-7f792f76dc31")
                        },
                        new
                        {
                            UserId = new Guid("51b4b238-4ae0-4e46-a3f4-e0acf7666b15"),
                            RoleId = new Guid("8f7579ee-4af9-4b71-9ada-7f792f76dc31")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(2644));

                    b.Property<Guid>("TouristId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TouristId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3677),
                            TouristId = new Guid("8a820adb-93d7-4c6f-9404-bdbfc14419f4")
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3678),
                            TouristId = new Guid("51b4b238-4ae0-4e46-a3f4-e0acf7666b15")
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(1821));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("TouristId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(1913));

                    b.Property<int>("Vote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.HasKey("Id");

                    b.HasIndex("TouristId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Phòng rất đẹp! Anh chủ rất dễ thương luôn!",
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3658),
                            IsDeleted = false,
                            TouristId = new Guid("8a820adb-93d7-4c6f-9404-bdbfc14419f4"),
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3659),
                            Vote = 5
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Phòng rất đẹp! Anh chủ rất dễ thương luôn!",
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3662),
                            IsDeleted = false,
                            TouristId = new Guid("51b4b238-4ae0-4e46-a3f4-e0acf7666b15"),
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3662),
                            Vote = 5
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(6420));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(6600));

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4027),
                            Description = "Phòng 1 giường cho 2 người ở",
                            IsDeleted = false,
                            Name = "Hollywood",
                            Price = 500000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4028)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4029),
                            Description = "Phòng 1 giường cho 2 người ở",
                            IsDeleted = false,
                            Name = "Tokyo",
                            Price = 500000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4030)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4030),
                            Description = "Phòng 1 giường cho 2 người ở",
                            IsDeleted = false,
                            Name = "Berlin",
                            Price = 500000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4031)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4032),
                            Description = "Phòng 2 giường cho 2 người ở",
                            IsDeleted = false,
                            Name = "Paris",
                            Price = 800000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4032)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4033),
                            Description = "Phòng 2 giường cho 2 người ở",
                            IsDeleted = false,
                            Name = "California",
                            Price = 800000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4033)
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.RoomBooking", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(9277));

                    b.Property<DateTime>("CancelingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(9100));

                    b.Property<DateTime>("CheckOutDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(9188));

                    b.Property<decimal>("Deposit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("IsCanceled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BillId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomBookings");

                    b.HasData(
                        new
                        {
                            BillId = 1,
                            RoomId = 1,
                            BookingTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3696),
                            CancelingTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckInDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2022, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deposit = 200000m,
                            IsCanceled = false,
                            Price = 500000m,
                            Total = 500000m
                        },
                        new
                        {
                            BillId = 1,
                            RoomId = 3,
                            BookingTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3698),
                            CancelingTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckInDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2022, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deposit = 200000m,
                            IsCanceled = false,
                            Price = 500000m,
                            Total = 500000m
                        },
                        new
                        {
                            BillId = 2,
                            RoomId = 4,
                            BookingTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3699),
                            CancelingTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckInDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2022, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deposit = 500000m,
                            IsCanceled = false,
                            Price = 800000m,
                            Total = 800000m
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.RoomCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(7052));

                    b.Property<string>("Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("default.jpg");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(7138));

                    b.HasKey("Id");

                    b.ToTable("RoomCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4130),
                            Image = "phong-1-giuong.jpg",
                            IsDeleted = false,
                            Name = "Phòng 1 giường",
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4130)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4131),
                            Image = "phong-2-giuong.jpg",
                            IsDeleted = false,
                            Name = "Phòng 2 giường",
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4132)
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.RoomImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(2275));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(2395));

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3724),
                            Description = "Ảnh phòng 1",
                            IsDeleted = false,
                            Name = "phong1-1.jpg",
                            RoomId = 1,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3725),
                            Description = "Ảnh phòng 1",
                            IsDeleted = false,
                            Name = "phong1-2.jpg",
                            RoomId = 1,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3726),
                            Description = "Ảnh phòng 1",
                            IsDeleted = false,
                            Name = "phong1-3.jpg",
                            RoomId = 1,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3727),
                            Description = "Ảnh phòng 1",
                            IsDeleted = false,
                            Name = "phong2-1.jpg",
                            RoomId = 2,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3727),
                            Description = "Ảnh phòng 1",
                            IsDeleted = false,
                            Name = "phong2-1.jpg",
                            RoomId = 2,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(7658));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("default.jpg");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(7741));

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4146),
                            Description = "200.000/lượt/24h, xe được bao xăng chạy thoải mái",
                            IsDeleted = false,
                            Name = "Thuê xe máy",
                            Price = 200000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4146)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4147),
                            Description = "50.000/lượt/người, được hỗ trợ kính lặn biển, vợt bắt nhum",
                            IsDeleted = false,
                            Name = "Lặn nhum",
                            Price = 50000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4148)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4149),
                            Description = "50.000/lượt/người, hướng dẫn leo núi, hỗ trợ nước uống",
                            IsDeleted = false,
                            Name = "Chinh phục Ma Thiên Lãnh",
                            Price = 50000m,
                            UpdatedTime = new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(4149)
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.ServiceBooking", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("BookingTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 50, DateTimeKind.Local).AddTicks(644));

                    b.Property<DateTime>("CancelingTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCanceled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BillId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceBookings");

                    b.HasData(
                        new
                        {
                            BillId = 1,
                            ServiceId = 1,
                            Amount = 1,
                            BookingTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3711),
                            CancelingTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            Price = 200000m,
                            Total = 200000m
                        },
                        new
                        {
                            BillId = 1,
                            ServiceId = 2,
                            Amount = 2,
                            BookingTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3713),
                            CancelingTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            Price = 50000m,
                            Total = 100000m
                        },
                        new
                        {
                            BillId = 2,
                            ServiceId = 1,
                            Amount = 2,
                            BookingTime = new DateTime(2022, 10, 26, 14, 41, 5, 54, DateTimeKind.Local).AddTicks(3714),
                            CancelingTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            Price = 200000m,
                            Total = 400000m
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("default.png");

                    b.Property<string>("CINo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisteredTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(8354));

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 26, 14, 41, 5, 49, DateTimeKind.Local).AddTicks(8493));

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a820adb-93d7-4c6f-9404-bdbfc14419f4"),
                            AccessFailedCount = 0,
                            Avatar = "lam.jpg",
                            CINo = "333444555",
                            ConcurrencyStamp = "3a003cd9-458b-4514-8e8e-ee6a37b1cddc",
                            Email = "lam@gmail.com",
                            EmailConfirmed = false,
                            IsBlocked = false,
                            LockoutEnabled = false,
                            Name = "Nguyễn Tùng Lâm",
                            Password = "AQAAAAEAACcQAAAAEO4zHrsgWzbJVyNpkHQHm9kCEhpLGG9FHL9uACluB64CsnWl2DkedSZVbw9LqpxsNg==",
                            PhoneNumber = "0338307449",
                            PhoneNumberConfirmed = false,
                            RegisteredTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("51b4b238-4ae0-4e46-a3f4-e0acf7666b15"),
                            AccessFailedCount = 0,
                            Avatar = "an.jpg",
                            CINo = "444555666",
                            ConcurrencyStamp = "3d1ac1de-11fc-43de-9962-ab7814d5740e",
                            Email = "an@gmail.com",
                            EmailConfirmed = false,
                            IsBlocked = false,
                            LockoutEnabled = false,
                            Name = "Nguyễn Văn An",
                            Password = "AQAAAAEAACcQAAAAEHk39Gw6in2giw7tdbV2sVXRIoxKgE1nBoRhCgOqdP3x9x8IpZOe6ROuq7QXwoTnrA==",
                            PhoneNumber = "0338307994",
                            PhoneNumberConfirmed = false,
                            RegisteredTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("372ea575-2536-4076-9bab-3e3138de495f"),
                            AccessFailedCount = 0,
                            Avatar = "admin.jpg",
                            CINo = "777888999",
                            ConcurrencyStamp = "3041285d-7d8b-4f55-8c17-c27f0ac018d4",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            IsBlocked = false,
                            LockoutEnabled = false,
                            Name = "John",
                            Password = "AQAAAAEAACcQAAAAEMnRjSO4/Q7q+9cKUek6a+VP0FOPv6OYN1iJCDG5/636rjmhWwgAusqu/ZE8hh9OrA==",
                            PhoneNumber = "0123456789",
                            PhoneNumberConfirmed = false,
                            RegisteredTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e87b492-5343-4272-9a34-fa5de7cffb22"),
                            ConcurrencyStamp = "4f7e0590-f0a9-4b06-b9ff-511a04a291b1",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = new Guid("8f7579ee-4af9-4b71-9ada-7f792f76dc31"),
                            ConcurrencyStamp = "7c13d780-56f1-4d82-9d75-e0aa5e978a1b",
                            Description = "Tourist role",
                            Name = "tourist",
                            NormalizedName = "tourist"
                        });
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Bill", b =>
                {
                    b.HasOne("TheSkyHomestay.Data.Models.User", "Tourist")
                        .WithMany()
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tourist");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Feedback", b =>
                {
                    b.HasOne("TheSkyHomestay.Data.Models.User", "Tourist")
                        .WithMany()
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tourist");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Room", b =>
                {
                    b.HasOne("TheSkyHomestay.Data.Models.RoomCategory", "Category")
                        .WithMany("Rooms")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.RoomBooking", b =>
                {
                    b.HasOne("TheSkyHomestay.Data.Models.Bill", "Bill")
                        .WithMany("RoomBookings")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheSkyHomestay.Data.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.RoomImage", b =>
                {
                    b.HasOne("TheSkyHomestay.Data.Models.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.ServiceBooking", b =>
                {
                    b.HasOne("TheSkyHomestay.Data.Models.Bill", "Bill")
                        .WithMany("ServiceBookings")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheSkyHomestay.Data.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Bill", b =>
                {
                    b.Navigation("RoomBookings");

                    b.Navigation("ServiceBookings");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.Room", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("TheSkyHomestay.Data.Models.RoomCategory", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
